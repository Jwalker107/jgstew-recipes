<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<{{TypeTaskOrFixlet}}{{^TypeTaskOrFixlet}}Task{{/TypeTaskOrFixlet}}>
		<Title>Run: {{DisplayName}} v{{version}} - {{TitleOS}}{{#64BitOnly}} (x64){{/64BitOnly}}{{#remediate}} - WITH REMEDIATION{{/remediate}}</Title>
		<Description><![CDATA[
		{{>Description-CommunityTestStatement}}
		</P>
		{{>Log4J2Scan-Description-Links}}
		</P>
		{{>Log4J2Scan-Description}}
		</P>
		{{#remediate}}{{>Log4JScan-Description-Remediation}}{{/remediate}}
		]]>		</Description>
		<Relevance><![CDATA[{{{RelevanceOS}}}]]></Relevance>
		{{#64BitOnly}}<Relevance><![CDATA["x86_64" = architecture of operating system]]></Relevance>{{/64BitOnly}}
		<Category></Category>
		<DownloadSize>{{DownloadSize}}{{^DownloadSize}}0{{/DownloadSize}}</DownloadSize>
		<Source>{{DisplayName}}</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>{{SourceReleaseDate}}</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>action-ui-metadata</Name>
			<Value>{ {{#version}}"version":"{{version}}",{{/version}}"size":{{DownloadSize}}{{^DownloadSize}}0{{/DownloadSize}}{{^patch}}{{#icon_base64}},"icon":"data:{{icon_type}}{{^icon_type}}image/png{{/icon_type}};base64,{{icon_base64}}"{{/icon_base64}}{{/patch}} }</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>{{x-fixlet-modification-time}}</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run {{DisplayName}} v{{version}}.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
//parameter "exclusionlist" is provided in the Description tab
// Download {{DisplayName}}:
begin prefetch block
{{{prefetch}}}
end prefetch block

{{>Log4J2Scan-ActionFolder}}

// Get shell binary, should return /bin/sh in most cases:
parameter "shell_bin" = "{ tuple string items 0 of concatenations ", " of ( pathnames of files whose(name of it as lowercase = "sh" OR name of it as lowercase = "sh.exe") of (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it; (if (windows of operating system) then (x64 variables "PATH" of it) else NOTHINGS) ) of environments ; it) of "/bin/sh" }"

// Delete destination of next command if applicable
delete "{parameter "BPSFolder"}log4j2-scan"

// TODO: Does this command work on Linux and Unix? Does this binary work on Unix?
wait tar -zxf __Download/{{file_name}} -C "{parameter "BPSFolder"}"



// Set to log4j2-scan executable
run {parameter "shell_bin"} -c "chmod +x '{parameter "BPSFolder"}log4j2-scan'"

// Run {{DisplayName}}:
// WARNING: this attempts to exclude network shares, but might not be perfect.
run {parameter "shell_bin"} -c "cd '{parameter "BPSFolder"}' && ./log4j2-scan --scan-log4j1 --no-symlink --no-empty-report --exclude-fs nfs,nfs3,nfs4,cifs,tmpfs,devtmpfs,iso9660 --exclude-config '{parameter "ExclusionFile"}'  {{remediate}} / > '{parameter "ListFile"}'"

// Wait up to 30 seconds for the logfile to be created to check successful starupt
parameter "StartTime"="{now}"
pause while {not exists file (parameter "ListFile") and now - (parameter "StartTime" as time) < 30 * second }
// Check that an output log file has been created as an indicator that the scan has launched successfully
continue if {exists file (parameter "ListFile") whose (modification time of it >= active start time of action)}

// End]]></ActionScript>

		</DefaultAction>
	</{{TypeTaskOrFixlet}}{{^TypeTaskOrFixlet}}Task{{/TypeTaskOrFixlet}}>
</BES>
